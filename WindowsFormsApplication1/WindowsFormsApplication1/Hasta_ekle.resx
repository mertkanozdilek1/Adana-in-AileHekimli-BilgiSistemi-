<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="KAYDET.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>